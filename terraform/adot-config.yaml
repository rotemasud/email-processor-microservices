# AWS Distro for OpenTelemetry Collector Configuration
# This configuration scrapes Prometheus metrics from Spring Boot applications
# and sends them to AWS Managed Prometheus

receivers:
  prometheus:
    config:
      scrape_configs:
        - job_name: 'spring-boot-metrics'
          scrape_interval: 30s
          scrape_timeout: 10s
          metrics_path: '/actuator/prometheus'
          static_configs:
            - targets: ['localhost:8080']
              labels:
                service: '$${SERVICE_NAME}'
                environment: 'production'

processors:
  batch:
    timeout: 60s
    send_batch_size: 1024
  
  resource:
    attributes:
      - key: service.name
        value: $${SERVICE_NAME}
        action: upsert
      - key: aws.region
        value: $${AWS_REGION}
        action: upsert

exporters:
  prometheusremotewrite:
    endpoint: ${PROMETHEUS_REMOTE_WRITE_URL}
    auth:
      authenticator: sigv4auth
    resource_to_telemetry_conversion:
      enabled: true

  logging:
    loglevel: info

extensions:
  sigv4auth:
    region: $${AWS_REGION}
    service: aps

  health_check:
    endpoint: :13133

service:
  extensions: [sigv4auth, health_check]
  pipelines:
    metrics:
      receivers: [prometheus]
      processors: [batch, resource]
      exporters: [prometheusremotewrite, logging]
  telemetry:
    logs:
      level: info

